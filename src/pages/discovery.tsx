import React, { useEffect } from "react";
import { useRecoilState } from "recoil";
import { searchResultsState } from "../../atoms/searchAtom";
import { mediaTypeState } from "../../atoms/mediaTypeAtom";
import { Movie } from "../../interface";
import Head from "next/head";
import Body from "../components/Body";
import Search from "../components/Search";
import Poster from "../components/Poster";
import {
  getDiscoveryMovies,
  getDiscoveryTVs,
  getMovieAnimation,
  getMovieThriller,
  getTvAnimation,
} from "./api/movie";

interface IDiscoveryMovies {
  discoveryMovies: Movie[];
  animationMovies: Movie[];
  thrillerMovies: Movie[];
  discoveryTvs: Movie[];
  animationTvs: Movie[];
}

const Discovery = ({
  discoveryMovies,
  animationMovies,
  thrillerMovies,
  discoveryTvs,
  animationTvs,
}: IDiscoveryMovies) => {
  const [searchResults, setSearchResults] =
    useRecoilState<any>(searchResultsState);

  useEffect(() => {
    setSearchResults(null);
  }, []);

  const [mediaType] = useRecoilState(mediaTypeState);

  return (
    <main>
      <Head>
        <title>Discover</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Body>
        <h1 className="whitespace-nowrap text-center text-2xl font-black text-white md:text-4xl">
          Discover Movie Star
        </h1>
        <div className="md:hidden">
          <Search />
        </div>
        {searchResults && (
          <div className="space-y-2">
            <h1 className="text-xl font-bold text-white md:text-2xl">
              Search Results
            </h1>
            <div className="row scrollbar-thumb-gray-800 scrollbar-thin rounded">
              {searchResults?.map((movie: Movie) => (
                <Poster
                  key={movie.id}
                  movie={movie}
                  size="big"
                  type={mediaType}
                />
              ))}
            </div>
          </div>
        )}
        <div className="space-y-2 pt-5">
          <h1 className="text-xl font-bold text-white md:text-2xl">
            9+ rated movies of all time
          </h1>
          <div className="row scrollbar-thumb-gray-800 scrollbar-thin rounded">
            {discoveryMovies?.map((movie) => (
              <Poster key={movie.id} movie={movie} size="big" type="movie" />
            ))}
          </div>
        </div>
        <div className="space-y-2 pt-5">
          <h1 className="text-xl font-bold text-white md:text-2xl">
            Best TV Shows of all tiem
          </h1>
          <div className="row  scrollbar-thumb-gray-800 scrollbar-thin rounded">
            {discoveryTvs?.map((movie) => (
              <Poster
                key={movie.id}
                movie={movie}
                size="big"
                type="tv-series"
              />
            ))}
          </div>
        </div>
        <div className="space-y-2 pt-5">
          <h1 className="text-xl font-bold text-white md:text-2xl">
            Animation{" "}
          </h1>
          <p>Movies</p>
          <div
            className="row  scrollbar-thumb-gray-800 scrollbar-thin  
          scrollbar-thumb-rounded-md rounded"
          >
            {animationMovies?.map((movie) => (
              <Poster key={movie.id} movie={movie} size="normal" type="movie" />
            ))}
          </div>
          <p>TV Shows</p>
          <div
            className="row  scrollbar-thumb-gray-800 scrollbar-thin   
          scrollbar-thumb-rounded-md rounded"
          >
            {animationTvs?.map((movie) => (
              <Poster
                key={movie.id}
                movie={movie}
                size="normal"
                type="tv-series"
              />
            ))}
          </div>
        </div>
        <div className="space-y-2">
          <h1 className="text-xl font-bold text-white md:text-2xl">
            Thriller Movies
          </h1>
          <div
            className="row  scrollbar-thumb-gray-800 scrollbar-thin  
          scrollbar-thumb-rounded-md rounded"
          >
            {thrillerMovies?.map((movie) => (
              <Poster key={movie.id} movie={movie} size="big" type="movie" />
            ))}
          </div>
        </div>
      </Body>
    </main>
  );
};

export const getStaticProps = async () => {
  const [
    discoveryMovies,
    animationMovies,
    thrillerMovies,
    discoveryTvs,
    animationTvs,
  ] = [
    await getDiscoveryMovies(),
    await getMovieAnimation(),
    await getMovieThriller(),
    await getDiscoveryTVs(),
    await getTvAnimation(),
  ];
  return {
    props: {
      discoveryMovies: discoveryMovies,
      animationMovies: animationMovies,
      thrillerMovies: thrillerMovies,
      discoveryTvs: discoveryTvs,
      animationTvs: animationTvs,
    },
  };
};

export default Discovery;
